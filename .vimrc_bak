set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'taghighlight'

Plugin 'majutsushi/tagbar'
nmap tb :TagbarToggle<CR> 
let g:tagbar_ctags_bin='ctags' "ctags程序的路径 
let g:tagbar_width=30 "窗口宽度的设置 
"map <F3> :Tagbar<CR> 
"autocmd BufReadPost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar#autoopen() "如果是c语言的程序的话，tagbar自动开启

Plugin 'scrooloose/nerdtree' "文件资源管理器
nmap fb :NERDTreeToggle<CR>
let NERDTreeWinPos='left'
let NERDTreeWinSize=30
"map <F2> :NERDTreeToggle<CR>

""Plugin 'git://github.com/kien/ctrlp.vim.git'
Plugin 'kien/ctrlp.vim'
Plugin 'rhysd/vim-clang-format' "apt install clang-format
let g:clang_format#style_options = {
            \ "AccessModifierOffset" : -4,
            \ "AllowShortIfStatementsOnASingleLine" : "true",
            \ "AlwaysBreakTemplateDeclarations" : "true",
            \ "Standard" : "C++11"}

"map to <Leader>cf in C++ code
autocmd FileType c,cpp,objc nnoremap <Leader>cf :<C-u>ClangFormat<CR>
autocmd FileType c,cpp,objc vnoremap <Leader>cf :ClangFormat<CR>
" if you install vim-operator-user
"autocmd FileType c,cpp,objc map <buffer><Leader>x <Plug>(operator-clang-format)
" Toggle auto formatting:
nmap <Leader>C :ClangFormatAutoToggle<CR>

Plugin 'bling/vim-airline' "状态栏
set laststatus=2

""Plugin 'fholgado/minibufexpl.vim' 
""let g:miniBufExplMapWindowNavVim = 1 
""let g:miniBufExplMapWindowNavArrows = 1 
""let g:miniBufExplMapCTabSwitchBufs = 1 
""let g:miniBufExplModSelTarget = 1 
""let g:miniBufExplMoreThanOne=0 
""map <F11> :MBEbp<CR>
""map <F12> :MBEbn<CR>

Plugin 'vim-scripts/DoxygenToolkit.vim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
""Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
""Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
""Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just:PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

set nu
set ts=4
set expandtab 
set smartindent
set shiftwidth=4
set encoding=utf-8
set termencoding=utf-8
set fileencodings=utf-8,gbk,latin1
set hls
"hi comment ctermfg=6
set cscopequickfix=s-,c-,d-,i-,t-,e-

func CFileTitle()
    call setline(1, "/**")
    call append(1, "* ".expand("%"))
    call append(2, "* wangkaichao@skyworth.com ".strftime("%Y-%m-%d"))
    call append(3, "*/")
endfunc

map title :call CFileTitle()<CR>

inoremap { {}<LEFT>
inoremap [ []<LEFT>
"inoremap ( ()<LEFT>
inoremap " ""<LEFT>
inoremap ' ''<LEFT>

if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

if has("autocmd")
  filetype plugin indent on
endif

set showmatch
set smartcase
